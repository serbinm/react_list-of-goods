{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","resetVisible","isReversed","sortBy","sortName","setState","sortLength","reverse","reset","this","visibleGoods","sort","g1","g2","length","localeCompare","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kQAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyCWC,EAAb,4MACEC,MAAyB,CACvBC,cAAc,EACdC,YAAY,EACZC,OAAQ,QAJZ,EAOEC,SAAW,WACT,EAAKC,SAAS,CACZF,OAAQ,WACRF,cAAc,KAVpB,EAcEK,WAAa,WACX,EAAKD,SAAS,CACZF,OAAQ,SACRF,cAAc,KAjBpB,EAqBEM,QAAU,WACR,MAA0B,SAAtB,EAAKP,MAAMG,OACN,EAAKE,UAAS,SAAAL,GAAK,MAAK,CAC7BE,YAAaF,EAAME,eAIhB,EAAKG,UAAS,SAACL,GAAD,MAAY,CAC/BE,YAAaF,EAAME,WACnBD,cAAeD,EAAME,gBA9B3B,EAkCEM,MAAQ,WACN,EAAKH,SAAS,CACZJ,cAAc,EACdC,YAAY,EACZC,OAAQ,UAtCd,4CA0CE,WACE,MAA6CM,KAAKT,MAA1CC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,OAE5BO,EAAY,UAAOZ,GAmBzB,OAjBAY,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQV,GACN,IAAK,SACH,OAAOS,EAAGE,OAASD,EAAGC,OAExB,IAAK,WACH,OAAOF,EAAGG,cAAcF,GAE1B,QACE,OAAO,MAITX,GACFQ,EAAaH,UAIb,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpB,kBAAkB,EAClB,WAAkC,aAAtBT,KAAKT,MAAMG,SAEzBgB,QAASV,KAAKL,SANhB,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IAAW,CACpB,qBAAqB,EACrB,WAAkC,WAAtBT,KAAKT,MAAMG,SAEzBgB,QAASV,KAAKH,WANhB,4BAWA,wBACEW,KAAK,SACLD,UAAWE,IAAW,CACpB,qBAAqB,EACrB,YAAaT,KAAKT,MAAME,aAE1BiB,QAASV,KAAKF,QANhB,qBAWCN,GACC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAASV,KAAKD,MAHhB,sBAWJ,6BACE,6BACGE,EAAaU,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBArHrB,GAAyBC,IAAMC,WCrD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c5e2bd3d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// enum SortType {\n//   NONE,\n//   ALPHABET,\n//   LENGTH,\n// }\n\n// type ReorderOptions = {\n//   sortType: SortType,\n//   isReversed: boolean,\n// };\n\n// // Use this function in the render method to prepare goods\n// export function getReorderedGoods( goods: string[],{ sortType, isReversed }: ReorderOptions,\n// ) {\n//   // To avoid the original array mutation\n//   const visibleGoods = [...goods];\n\n//   // Sort and reverse goods if needed\n//   // eslint-disable-next-line no-console\n//   console.log(sortType, isReversed);\n\n//   return visibleGoods;\n// }\n\n// DON'T save goods to the state\n\n// type State = {\n//   resetVisible: boolean,\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\ntype State = {\n  resetVisible: boolean,\n  isReversed: boolean,\n  sortBy: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    resetVisible: false,\n    isReversed: false,\n    sortBy: 'none',\n  };\n\n  sortName = () => {\n    this.setState({\n      sortBy: 'alphabet',\n      resetVisible: true,\n    });\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortBy: 'length',\n      resetVisible: true,\n    });\n  };\n\n  reverse = () => {\n    if (this.state.sortBy !== 'none') {\n      return this.setState(state => ({\n        isReversed: !state.isReversed,\n      }));\n    }\n\n    return this.setState((state) => ({\n      isReversed: !state.isReversed,\n      resetVisible: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      resetVisible: false,\n      isReversed: false,\n      sortBy: 'none',\n    });\n  };\n\n  render() {\n    const { resetVisible, isReversed, sortBy } = this.state;\n\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'length':\n          return g1.length - g2.length;\n\n        case 'alphabet':\n          return g1.localeCompare(g2);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames({\n              'button is-info': true,\n              'is-light': this.state.sortBy !== 'alphabet',\n            })}\n            onClick={this.sortName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              'button is-success': true,\n              'is-light': this.state.sortBy !== 'length',\n            })}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames({\n              'button is-warning': true,\n              'is-light': !this.state.isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {resetVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}